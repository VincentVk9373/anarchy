{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/module/actor/SRAActor.ts","src/module/actor/SRAActorSheet.ts","src/module/config.ts","src/module/constants.ts","src/module/handlebars-manager.ts","src/module/hooks-manager.ts","src/module/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\r\nexport class SRAActor extends Actor {\r\n\r\n  prepareData() {\r\n    super.prepareData();\r\n  }\r\n\r\n}","import { TEMPLATES_PATH } from \"../constants\";\r\n\r\nexport class SRAActorSheet extends ActorSheet {\r\n\r\n    get template() {\r\n    return `${TEMPLATES_PATH}/actor/${this.actor.data.type}.html`;\r\n  }\r\n\r\n  getData(options?: Application.RenderOptions): Promise<ActorSheet.Data<ActorSheet.Options>> | ActorSheet.Data<ActorSheet.Options> {\r\n    let data = super.getData() as unknown as ActorSheet.Data<ActorSheet.Options>;\r\n    // TODO: fill data on our own\r\n    \r\n    return data;\r\n  }\r\n\r\n}","export const SRA = {\r\n    itemTypes: {\r\n        metatype: 'SRA.ItemTypes.Metatype',\r\n        skill: 'SRA.ItemTypes.Skill',\r\n        quality: 'SRA.ItemTypes.Quality',\r\n        shadowamp: 'SRA.ItemTypes.ShadowAmp',\r\n        weapon: 'SRA.ItemTypes.Weapon',\r\n        gear: 'SRA.ItemTypes.Gear',\r\n        contact: 'SRA.ItemTypes.Contact'\r\n    },\r\n\r\n    attributes: {\r\n        strength: 'SRA.Attributes.Strength',\r\n        agility: 'SRA.Attributes.Agility',\r\n        willpower: 'SRA.Attributes.Willpower',\r\n        logic: 'SRA.Attributes.Logic',\r\n        charisma: 'SRA.Attributes.Charisma',\r\n        edge: 'SRA.Attributes.Edge',\r\n    },\r\n\r\n    // specialTypes: {\r\n    //     mundane: 'SRA.Mundane',\r\n    //     awakened: 'SRA.Awakened',\r\n    //     emerged: 'SRA.Emerged',\r\n    // },\r\n\r\n    // damageTypes: {\r\n    //     physical: 'SRA.DmgTypePhysical',\r\n    //     stun: 'SRA.DmgTypeStun',\r\n    //     matrix: 'SRA.DmgTypeMatrix',\r\n    // },\r\n\r\n    // spellTypes: {\r\n    //     combat: 'SRA.SpellCatCombat',\r\n    //     effect: 'SRA.SpellCatEffect',\r\n    // },\r\n\r\n    // weaponRanges: {\r\n    //     close: 'SRA.WeaponRangeClose',\r\n    //     near: 'SRA.WeaponRangeNear',\r\n    //     far: 'SRA.WeaponRangeFar',\r\n    // },\r\n\r\n    // qualityTypes: {\r\n    //     positive: 'SRA.QualityTypePositive',\r\n    //     negative: 'SRA.QualityTypeNegative',\r\n    // },\r\n\r\n};\r\n","/**\r\n * The constants file contains things that do not change\r\n *\r\n * Constants are written in ALL_CAPS_CONSTANTS and should never be changed during runtime.\r\n */\r\nexport const SYSTEM_NAME = 'shadowrun-anarchy';\r\nexport const SYSTEM_SOCKET = `system.${SYSTEM_NAME}`;\r\nexport const SYSTEM_PATH = `systems/${SYSTEM_NAME}`;\r\nexport const SYSTEM_DIST = `${SYSTEM_PATH}/dist`;\r\nexport const TEMPLATES_PATH = `systems/${SYSTEM_NAME}/dist/templates`;\r\n\r\nexport const FLAGS = {\r\n    // for system flags (used for system settings)\r\n};\r\nexport const CORE_NAME = 'core';\r\nexport const CORE_FLAGS = {\r\n    RollMode: 'rollMode'\r\n}\r\n\r\nexport const DEFAULT_ROLL_NAME = 'Roll';\r\nexport const LENGTH_UNIT = 'm';\r\n","import { TEMPLATES_PATH } from \"./constants\";\r\n\r\nexport const partials = [\r\n  `${TEMPLATES_PATH}/actor/parts/ProfileImage.html`,\r\n];\r\n\r\nexport class HandlebarsManager {\r\n\r\n  static async preload() {\r\n    await loadTemplates(partials);\r\n  }\r\n\r\n  static async register() {\r\n  }\r\n}","import { SRAActor } from './actor/SRAActor'\r\nimport { SRAActorSheet } from './actor/SRAActorSheet';\r\nimport { SRA } from './config';\r\nimport { SYSTEM_NAME } from './constants';\r\nimport { HandlebarsManager } from './handlebars-manager';\r\n\r\n\r\nexport class HooksManager {\r\n  static register() {\r\n    console.log('Shadowrun Anarchy | Registering system hooks');\r\n    Hooks.once('init', HooksManager.onInit)\r\n  }\r\n\r\n  static async onInit() {\r\n    console.log('Shadowrun Anarchy | onInit | loading system');\r\n    game['sra'] = {\r\n      SRAActor\r\n    }\r\n    CONFIG.Actor.documentClass = SRAActor;\r\n\r\n    // @ts-ignore\r\n    CONFIG.SRA = SRA;\r\n    Actors.unregisterSheet('core', ActorSheet);\r\n    Actors.registerSheet(SYSTEM_NAME, SRAActorSheet, {\r\n      label: \"SRA.Sheet.Actor\",\r\n      makeDefault: true,\r\n      types: ['character']\r\n    });\r\n    console.log('Shadowrun Sheet:', //game.i18n.localize(\r\n      \"SRA.Sheet.Actor\"\r\n      //)\r\n    );\r\n\r\n    await HandlebarsManager.preload();\r\n  }\r\n}","import { HandlebarsManager } from \"./handlebars-manager\";\r\nimport { HooksManager } from \"./hooks-manager\";\r\n\r\n/* -------------------------------------------- */\r\n/*  Foundry VTT Initialization                  */\r\n/* -------------------------------------------- */\r\n\r\nHooksManager.register();\r\nHandlebarsManager.register();\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}